// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.15.2
// source: gpu_instance.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GpuInstanceProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	IsP2PSupported      uint32 `protobuf:"varint,2,opt,name=IsP2pSupported,proto3" json:"IsP2pSupported,omitempty"`
	SliceCount          uint32 `protobuf:"varint,3,opt,name=SliceCount,proto3" json:"SliceCount,omitempty"`
	InstanceCount       uint32 `protobuf:"varint,4,opt,name=InstanceCount,proto3" json:"InstanceCount,omitempty"`
	MultiprocessorCount uint32 `protobuf:"varint,5,opt,name=MultiprocessorCount,proto3" json:"MultiprocessorCount,omitempty"`
	CopyEngineCount     uint32 `protobuf:"varint,6,opt,name=CopyEngineCount,proto3" json:"CopyEngineCount,omitempty"`
	DecoderCount        uint32 `protobuf:"varint,7,opt,name=DecoderCount,proto3" json:"DecoderCount,omitempty"`
	EncoderCount        uint32 `protobuf:"varint,8,opt,name=EncoderCount,proto3" json:"EncoderCount,omitempty"`
	JpegCount           uint32 `protobuf:"varint,9,opt,name=JpegCount,proto3" json:"JpegCount,omitempty"`
	OfaCount            uint32 `protobuf:"varint,10,opt,name=OfaCount,proto3" json:"OfaCount,omitempty"`
	MemorySizeMB        uint64 `protobuf:"varint,11,opt,name=MemorySizeMB,proto3" json:"MemorySizeMB,omitempty"`
}

func (x *GpuInstanceProfileInfo) Reset() {
	*x = GpuInstanceProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpu_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuInstanceProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInstanceProfileInfo) ProtoMessage() {}

func (x *GpuInstanceProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInstanceProfileInfo.ProtoReflect.Descriptor instead.
func (*GpuInstanceProfileInfo) Descriptor() ([]byte, []int) {
	return file_gpu_instance_proto_rawDescGZIP(), []int{0}
}

func (x *GpuInstanceProfileInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetIsP2PSupported() uint32 {
	if x != nil {
		return x.IsP2PSupported
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetSliceCount() uint32 {
	if x != nil {
		return x.SliceCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetInstanceCount() uint32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetMultiprocessorCount() uint32 {
	if x != nil {
		return x.MultiprocessorCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetCopyEngineCount() uint32 {
	if x != nil {
		return x.CopyEngineCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetDecoderCount() uint32 {
	if x != nil {
		return x.DecoderCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetEncoderCount() uint32 {
	if x != nil {
		return x.EncoderCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetJpegCount() uint32 {
	if x != nil {
		return x.JpegCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetOfaCount() uint32 {
	if x != nil {
		return x.OfaCount
	}
	return 0
}

func (x *GpuInstanceProfileInfo) GetMemorySizeMB() uint64 {
	if x != nil {
		return x.MemorySizeMB
	}
	return 0
}

type GpuInstanceProfileInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GpuInstanceProfileInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GpuInstanceProfileInfos) Reset() {
	*x = GpuInstanceProfileInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpu_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuInstanceProfileInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInstanceProfileInfos) ProtoMessage() {}

func (x *GpuInstanceProfileInfos) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInstanceProfileInfos.ProtoReflect.Descriptor instead.
func (*GpuInstanceProfileInfos) Descriptor() ([]byte, []int) {
	return file_gpu_instance_proto_rawDescGZIP(), []int{1}
}

func (x *GpuInstanceProfileInfos) GetData() []*GpuInstanceProfileInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GpuInstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  uint32                `protobuf:"varint,1,opt,name=DeviceId,proto3" json:"DeviceId,omitempty"`
	Id        uint32                `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	ProfileId uint32                `protobuf:"varint,3,opt,name=ProfileId,proto3" json:"ProfileId,omitempty"`
	Placement *GpuInstancePlacement `protobuf:"bytes,4,opt,name=Placement,proto3" json:"Placement,omitempty"`
}

func (x *GpuInstanceInfo) Reset() {
	*x = GpuInstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpu_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuInstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInstanceInfo) ProtoMessage() {}

func (x *GpuInstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInstanceInfo.ProtoReflect.Descriptor instead.
func (*GpuInstanceInfo) Descriptor() ([]byte, []int) {
	return file_gpu_instance_proto_rawDescGZIP(), []int{2}
}

func (x *GpuInstanceInfo) GetDeviceId() uint32 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *GpuInstanceInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GpuInstanceInfo) GetProfileId() uint32 {
	if x != nil {
		return x.ProfileId
	}
	return 0
}

func (x *GpuInstanceInfo) GetPlacement() *GpuInstancePlacement {
	if x != nil {
		return x.Placement
	}
	return nil
}

type GpuInstancePlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	Size  uint32 `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *GpuInstancePlacement) Reset() {
	*x = GpuInstancePlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpu_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuInstancePlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInstancePlacement) ProtoMessage() {}

func (x *GpuInstancePlacement) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInstancePlacement.ProtoReflect.Descriptor instead.
func (*GpuInstancePlacement) Descriptor() ([]byte, []int) {
	return file_gpu_instance_proto_rawDescGZIP(), []int{3}
}

func (x *GpuInstancePlacement) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GpuInstancePlacement) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GpuInstanceInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GpuInstanceInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GpuInstanceInfos) Reset() {
	*x = GpuInstanceInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpu_instance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuInstanceInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInstanceInfos) ProtoMessage() {}

func (x *GpuInstanceInfos) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_instance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInstanceInfos.ProtoReflect.Descriptor instead.
func (*GpuInstanceInfos) Descriptor() ([]byte, []int) {
	return file_gpu_instance_proto_rawDescGZIP(), []int{4}
}

func (x *GpuInstanceInfos) GetData() []*GpuInstanceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_gpu_instance_proto protoreflect.FileDescriptor

var file_gpu_instance_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x70, 0x75, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x98, 0x03, 0x0a,
	0x16, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x50, 0x32, 0x70,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x49, 0x73, 0x50, 0x32, 0x70, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x70, 0x79, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x43, 0x6f, 0x70, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x70, 0x65,
	0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4a, 0x70,
	0x65, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x66, 0x61, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4f, 0x66, 0x61, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a,
	0x65, 0x4d, 0x42, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x42, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x70, 0x75, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x47, 0x70, 0x75, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x40, 0x0a, 0x14, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x3f, 0x0a, 0x10, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x70,
	0x75, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gpu_instance_proto_rawDescOnce sync.Once
	file_gpu_instance_proto_rawDescData = file_gpu_instance_proto_rawDesc
)

func file_gpu_instance_proto_rawDescGZIP() []byte {
	file_gpu_instance_proto_rawDescOnce.Do(func() {
		file_gpu_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_gpu_instance_proto_rawDescData)
	})
	return file_gpu_instance_proto_rawDescData
}

var file_gpu_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gpu_instance_proto_goTypes = []interface{}{
	(*GpuInstanceProfileInfo)(nil),  // 0: protos.GpuInstanceProfileInfo
	(*GpuInstanceProfileInfos)(nil), // 1: protos.GpuInstanceProfileInfos
	(*GpuInstanceInfo)(nil),         // 2: protos.GpuInstanceInfo
	(*GpuInstancePlacement)(nil),    // 3: protos.GpuInstancePlacement
	(*GpuInstanceInfos)(nil),        // 4: protos.GpuInstanceInfos
}
var file_gpu_instance_proto_depIdxs = []int32{
	0, // 0: protos.GpuInstanceProfileInfos.Data:type_name -> protos.GpuInstanceProfileInfo
	3, // 1: protos.GpuInstanceInfo.Placement:type_name -> protos.GpuInstancePlacement
	2, // 2: protos.GpuInstanceInfos.Data:type_name -> protos.GpuInstanceInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gpu_instance_proto_init() }
func file_gpu_instance_proto_init() {
	if File_gpu_instance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gpu_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuInstanceProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpu_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuInstanceProfileInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpu_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuInstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpu_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuInstancePlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpu_instance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuInstanceInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gpu_instance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gpu_instance_proto_goTypes,
		DependencyIndexes: file_gpu_instance_proto_depIdxs,
		MessageInfos:      file_gpu_instance_proto_msgTypes,
	}.Build()
	File_gpu_instance_proto = out.File
	file_gpu_instance_proto_rawDesc = nil
	file_gpu_instance_proto_goTypes = nil
	file_gpu_instance_proto_depIdxs = nil
}
